// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connector/grpc/config.proto

// protoc --java_out=plugins=grpc:. api/*.proto
// protoc --go_out=plugins=grpc:. api/*.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Conf 数据库引擎对象
type Config struct {
	// Port 开放端口，便于其它应用访问
	Port string `protobuf:"bytes,1,opt,name=Port,proto3" json:"Port,omitempty"`
	// RootDir Lily服务默认存储路径
	RootDir string `protobuf:"bytes,2,opt,name=RootDir,proto3" json:"RootDir,omitempty"`
	// DataDir Lily服务数据默认存储路径
	DataDir string `protobuf:"bytes,3,opt,name=DataDir,proto3" json:"DataDir,omitempty"`
	// LogDir Lily服务默认日志存储路径
	LogDir string `protobuf:"bytes,4,opt,name=LogDir,proto3" json:"LogDir,omitempty"`
	// LimitOpenFile 限制打开文件描述符次数
	LimitOpenFile int32 `protobuf:"varint,5,opt,name=LimitOpenFile,proto3" json:"LimitOpenFile,omitempty"`
	// TLS 是否开启 TLS
	TLS bool `protobuf:"varint,6,opt,name=TLS,proto3" json:"TLS,omitempty"`
	// TLSServerKeyFile lily服务私钥
	TLSServerKeyFile string `protobuf:"bytes,7,opt,name=TLSServerKeyFile,proto3" json:"TLSServerKeyFile,omitempty"`
	// TLSServerCertFile lily服务数字证书
	TLSServerCertFile string `protobuf:"bytes,8,opt,name=TLSServerCertFile,proto3" json:"TLSServerCertFile,omitempty"`
	// Limit 是否启用服务限流策略
	Limit bool `protobuf:"varint,9,opt,name=Limit,proto3" json:"Limit,omitempty"`
	// LimitMillisecond 请求限定的时间段（毫秒）
	LimitMillisecond int32 `protobuf:"varint,10,opt,name=LimitMillisecond,proto3" json:"LimitMillisecond,omitempty"`
	// LimitCount 请求限定的时间段内允许的请求次数
	LimitCount int32 `protobuf:"varint,11,opt,name=LimitCount,proto3" json:"LimitCount,omitempty"`
	// LimitIntervalMillisecond 请求允许的最小间隔时间（微秒），0表示不限
	LimitIntervalMicrosecond int32 `protobuf:"varint,12,opt,name=LimitIntervalMicrosecond,proto3" json:"LimitIntervalMicrosecond,omitempty"`
	// LilyLockFilePath Lily当前进程地址存储文件地址
	LilyLockFilePath string `protobuf:"bytes,13,opt,name=LilyLockFilePath,proto3" json:"LilyLockFilePath,omitempty"`
	// LilyBootstrapFilePath Lily重启引导文件地址
	LilyBootstrapFilePath string   `protobuf:"bytes,14,opt,name=LilyBootstrapFilePath,proto3" json:"LilyBootstrapFilePath,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_511b956008f11c76, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Config) GetRootDir() string {
	if m != nil {
		return m.RootDir
	}
	return ""
}

func (m *Config) GetDataDir() string {
	if m != nil {
		return m.DataDir
	}
	return ""
}

func (m *Config) GetLogDir() string {
	if m != nil {
		return m.LogDir
	}
	return ""
}

func (m *Config) GetLimitOpenFile() int32 {
	if m != nil {
		return m.LimitOpenFile
	}
	return 0
}

func (m *Config) GetTLS() bool {
	if m != nil {
		return m.TLS
	}
	return false
}

func (m *Config) GetTLSServerKeyFile() string {
	if m != nil {
		return m.TLSServerKeyFile
	}
	return ""
}

func (m *Config) GetTLSServerCertFile() string {
	if m != nil {
		return m.TLSServerCertFile
	}
	return ""
}

func (m *Config) GetLimit() bool {
	if m != nil {
		return m.Limit
	}
	return false
}

func (m *Config) GetLimitMillisecond() int32 {
	if m != nil {
		return m.LimitMillisecond
	}
	return 0
}

func (m *Config) GetLimitCount() int32 {
	if m != nil {
		return m.LimitCount
	}
	return 0
}

func (m *Config) GetLimitIntervalMicrosecond() int32 {
	if m != nil {
		return m.LimitIntervalMicrosecond
	}
	return 0
}

func (m *Config) GetLilyLockFilePath() string {
	if m != nil {
		return m.LilyLockFilePath
	}
	return ""
}

func (m *Config) GetLilyBootstrapFilePath() string {
	if m != nil {
		return m.LilyBootstrapFilePath
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "api.Config")
}

func init() { proto.RegisterFile("connector/grpc/config.proto", fileDescriptor_511b956008f11c76) }

var fileDescriptor_511b956008f11c76 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xd1, 0x4b, 0x02, 0x41,
	0x10, 0xc6, 0xb9, 0x4e, 0x4f, 0x1d, 0x33, 0x6c, 0xa9, 0x58, 0x08, 0x4a, 0xa2, 0x07, 0x89, 0x38,
	0x1f, 0xea, 0xa9, 0x47, 0x95, 0x20, 0x3a, 0x49, 0x4e, 0xff, 0x81, 0x75, 0xdd, 0x6c, 0x69, 0xdb,
	0x39, 0xd6, 0x4d, 0xf0, 0x5f, 0xef, 0x29, 0x76, 0xce, 0xa4, 0xb2, 0xde, 0xe6, 0xfb, 0x7d, 0x33,
	0x3b, 0xb3, 0xf0, 0xc1, 0xa9, 0x44, 0x6b, 0x95, 0xf4, 0xe8, 0x7a, 0x0b, 0x57, 0xc8, 0x9e, 0x44,
	0xfb, 0xac, 0x17, 0x69, 0xe1, 0xd0, 0x23, 0x8b, 0x45, 0xa1, 0x2f, 0x3e, 0x62, 0x48, 0x06, 0x44,
	0x19, 0x83, 0xca, 0x18, 0x9d, 0xe7, 0x51, 0x27, 0xea, 0x36, 0x72, 0xaa, 0x19, 0x87, 0x5a, 0x8e,
	0xe8, 0x87, 0xda, 0xf1, 0x3d, 0xc2, 0x5f, 0x32, 0x38, 0x43, 0xe1, 0x45, 0x70, 0xe2, 0xd2, 0xd9,
	0x48, 0x76, 0x02, 0x49, 0x86, 0x8b, 0x60, 0x54, 0xc8, 0xd8, 0x28, 0x76, 0x09, 0xad, 0x4c, 0xbf,
	0x69, 0xff, 0x54, 0x28, 0x7b, 0xaf, 0x8d, 0xe2, 0xd5, 0x4e, 0xd4, 0xad, 0xe6, 0x3f, 0x21, 0x6b,
	0x43, 0x3c, 0xcd, 0x26, 0x3c, 0xe9, 0x44, 0xdd, 0x7a, 0x1e, 0x4a, 0x76, 0x05, 0xed, 0x69, 0x36,
	0x99, 0x28, 0xb7, 0x52, 0xee, 0x51, 0xad, 0x69, 0xb4, 0x46, 0x2f, 0xef, 0x70, 0x76, 0x0d, 0x87,
	0x5b, 0x36, 0x50, 0xce, 0x53, 0x73, 0x9d, 0x9a, 0x77, 0x0d, 0x76, 0x04, 0x55, 0x5a, 0xce, 0x1b,
	0xb4, 0xad, 0x14, 0x61, 0x1f, 0x15, 0x23, 0x6d, 0x8c, 0x5e, 0x2a, 0x89, 0x76, 0xce, 0x81, 0x4e,
	0xdd, 0xe1, 0xec, 0x0c, 0x80, 0xd8, 0x00, 0xdf, 0xad, 0xe7, 0x4d, 0xea, 0xfa, 0x46, 0xd8, 0x1d,
	0x70, 0x52, 0x0f, 0xd6, 0x2b, 0xb7, 0x12, 0x66, 0xa4, 0xa5, 0xc3, 0xcd, 0x9b, 0xfb, 0xd4, 0xfd,
	0xaf, 0x5f, 0xde, 0x61, 0xd6, 0x19, 0xca, 0xd7, 0x70, 0xed, 0x58, 0xf8, 0x17, 0xde, 0x2a, 0xff,
	0xfd, 0x9b, 0xb3, 0x5b, 0x38, 0x0e, 0xac, 0x8f, 0xe8, 0x97, 0xde, 0x89, 0x62, 0x3b, 0x70, 0x40,
	0x03, 0x7f, 0x9b, 0xfd, 0x14, 0xce, 0xa5, 0x4d, 0xc5, 0x4c, 0x39, 0x2d, 0x53, 0xa3, 0xcd, 0x7a,
	0x3e, 0x4b, 0xb7, 0x89, 0x49, 0x43, 0x62, 0xfa, 0xcd, 0x32, 0x1c, 0xe3, 0x90, 0x98, 0x59, 0x42,
	0xc1, 0xb9, 0xf9, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x75, 0xd3, 0x58, 0x57, 0x02, 0x00, 0x00,
}
